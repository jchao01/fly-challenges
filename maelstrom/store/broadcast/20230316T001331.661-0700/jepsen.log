2023-03-16 00:13:31,691{GMT}	INFO	[jepsen test runner] jepsen.core: Command line:
lein run test -w broadcast --bin /Users/silicon/go/bin/maelstrom-broadcast --node-count 1 --time-limit 20 --rate 10
2023-03-16 00:13:31,782{GMT}	INFO	[jepsen test runner] jepsen.core: Running test:
{:args []
 :remote
 #jepsen.control.retry.Remote{:remote #jepsen.control.scp.Remote{:cmd-remote #jepsen.control.sshj.SSHJRemote{:concurrency-limit 6,
                                                                                                             :conn-spec nil,
                                                                                                             :client nil,
                                                                                                             :semaphore nil},
                                                                 :conn-spec nil},
                              :conn nil}
 :log-net-send false
 :node-count 1
 :availability nil
 :max-txn-length 4
 :concurrency 1
 :db
 #object[maelstrom.db$db$reify__16142
         "0x49e3b86b"
         "maelstrom.db$db$reify__16142@49e3b86b"]
 :max-writes-per-key 16
 :leave-db-running? false
 :name "broadcast"
 :logging-json? false
 :start-time
 #object[org.joda.time.DateTime "0x60a3a0fa" "2023-03-16T00:13:31.661-07:00"]
 :nemesis-interval 10
 :net
 #object[maelstrom.net$jepsen_net$reify__15251
         "0x17734113"
         "maelstrom.net$jepsen_net$reify__15251@17734113"]
 :client
 #object[maelstrom.workload.broadcast$client$reify__16644
         "0x27aa700"
         "maelstrom.workload.broadcast$client$reify__16644@27aa700"]
 :barrier
 #object[java.util.concurrent.CyclicBarrier
         "0xd15f98a"
         "java.util.concurrent.CyclicBarrier@d15f98a"]
 :log-stderr false
 :pure-generators true
 :ssh {:dummy? true}
 :rate 10.0
 :checker
 #object[jepsen.checker$compose$reify__11881
         "0x704c3ca2"
         "jepsen.checker$compose$reify__11881@704c3ca2"]
 :argv
 ("test"
  "-w"
  "broadcast"
  "--bin"
  "/Users/silicon/go/bin/maelstrom-broadcast"
  "--node-count"
  "1"
  "--time-limit"
  "20"
  "--rate"
  "10")
 :nemesis
 (jepsen.nemesis.ReflCompose
  {:fm {:start-partition 0,
        :stop-partition 0,
        :kill 1,
        :start 1,
        :pause 1,
        :resume 1},
   :nemeses [#unprintable "jepsen.nemesis.combined$partition_nemesis$reify__16416@7d3a9061"
             #unprintable "jepsen.nemesis.combined$db_nemesis$reify__16397@2a2f7a61"]})
 :nodes ["n0"]
 :test-count 1
 :latency {:mean 0, :dist :constant}
 :bin "/Users/silicon/go/bin/maelstrom-broadcast"
 :generator
 ((jepsen.generator.Synchronize
   {:gen (jepsen.generator.TimeLimit
          {:limit 20000000000,
           :cutoff nil,
           :gen (jepsen.generator.Any
                 {:gens [(jepsen.generator.OnThreads
                          {:f #{:nemesis},
                           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                                   "0x256a25a8"
                                                   "jepsen.generator.context$make_thread_filter$lazy_filter__9167@256a25a8"],
                           :gen nil})
                         (jepsen.generator.OnThreads
                          {:f #jepsen.generator.context.AllBut{:element :nemesis},
                           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                                   "0x68f67bbd"
                                                   "jepsen.generator.context$make_thread_filter$lazy_filter__9167@68f67bbd"],
                           :gen (jepsen.generator.Stagger
                                 {:dt 200000000,
                                  :next-time nil,
                                  :gen (jepsen.generator.Mix
                                        {:i 0,
                                         :gens [({:f :broadcast, :value 0}
                                                 {:f :broadcast, :value 1}
                                                 {:f :broadcast, :value 2}
                                                 {:f :broadcast, :value 3}
                                                 {:f :broadcast, :value 4}
                                                 {:f :broadcast, :value 5}
                                                 {:f :broadcast, :value 6}
                                                 {:f :broadcast, :value 7}
                                                 ...)
                                                ({:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 ...)]})})})]})})})
  (jepsen.generator.Synchronize
   {:gen (jepsen.generator.OnThreads
          {:f #{:nemesis},
           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                   "0x65c040c9"
                                   "jepsen.generator.context$make_thread_filter$lazy_filter__9167@65c040c9"],
           :gen ()})})
  (jepsen.generator.Synchronize
   {:gen {:type :log, :value "Waiting for recovery..."}})
  (jepsen.generator.Synchronize {:gen {:type :sleep, :value 10}})
  (jepsen.generator.Synchronize
   {:gen (jepsen.generator.OnThreads
          {:f #jepsen.generator.context.AllBut{:element :nemesis},
           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                   "0x11736ebc"
                                   "jepsen.generator.context$make_thread_filter$lazy_filter__9167@11736ebc"],
           :gen (jepsen.generator.EachThread
                 {:fresh-gen {:f :read, :final? true},
                  :context-filters #object[clojure.core$promise$reify__8591
                                           "0x4a03c4bc"
                                           {:status :pending, :val nil}],
                  :gens {}})})}))
 :log-net-recv false
 :os
 #object[maelstrom.net$jepsen_os$reify__15254
         "0x3d0c88f4"
         "maelstrom.net$jepsen_os$reify__15254@3d0c88f4"]
 :time-limit 20
 :workload :broadcast
 :consistency-models [:strict-serializable]
 :topology :grid}

2023-03-16 00:13:32,581{GMT}	INFO	[jepsen node n0] maelstrom.net: Starting Maelstrom network
2023-03-16 00:13:32,581{GMT}	INFO	[jepsen test runner] jepsen.db: Tearing down DB
2023-03-16 00:13:32,582{GMT}	INFO	[jepsen test runner] jepsen.db: Setting up DB
2023-03-16 00:13:32,583{GMT}	INFO	[jepsen node n0] maelstrom.service: Starting services: (lin-kv lin-tso lww-kv seq-kv)
2023-03-16 00:13:32,584{GMT}	INFO	[jepsen node n0] maelstrom.db: Setting up n0
2023-03-16 00:13:32,584{GMT}	INFO	[jepsen node n0] maelstrom.process: launching /Users/silicon/go/bin/maelstrom-broadcast []
2023-03-16 00:13:32,758{GMT}	INFO	[jepsen test runner] jepsen.core: Relative time begins now
2023-03-16 00:13:32,769{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:broadcast	0
2023-03-16 00:13:32,770{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:broadcast	0
2023-03-16 00:13:32,909{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:broadcast	1
2023-03-16 00:13:32,909{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:broadcast	1
2023-03-16 00:13:32,971{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2023-03-16 00:13:32,979{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 0 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 3}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids [0 1], :in_reply_to 3, :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:33,003{GMT}	INFO	[jepsen worker 0] jepsen.util: 1	:invoke	:read	nil
2023-03-16 00:13:33,008{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 1 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids [0 1], :in_reply_to 1, :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:33,157{GMT}	INFO	[jepsen worker 0] jepsen.util: 2	:invoke	:read	nil
2023-03-16 00:13:33,160{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 2 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids [0 1], :in_reply_to 1, :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:33,338{GMT}	INFO	[jepsen worker 0] jepsen.util: 3	:invoke	:broadcast	2
2023-03-16 00:13:33,340{GMT}	INFO	[jepsen worker 0] jepsen.util: 3	:ok	:broadcast	2
2023-03-16 00:13:33,452{GMT}	INFO	[jepsen worker 0] jepsen.util: 3	:invoke	:read	nil
2023-03-16 00:13:33,458{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 3 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 2}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids [0 1 2], :in_reply_to 2, :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:33,557{GMT}	INFO	[jepsen worker 0] jepsen.util: 4	:invoke	:read	nil
2023-03-16 00:13:33,562{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 4 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids [0 1 2], :in_reply_to 1, :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:33,697{GMT}	INFO	[jepsen worker 0] jepsen.util: 5	:invoke	:broadcast	3
2023-03-16 00:13:33,698{GMT}	INFO	[jepsen worker 0] jepsen.util: 5	:ok	:broadcast	3
2023-03-16 00:13:33,832{GMT}	INFO	[jepsen worker 0] jepsen.util: 5	:invoke	:broadcast	4
2023-03-16 00:13:33,835{GMT}	INFO	[jepsen worker 0] jepsen.util: 5	:ok	:broadcast	4
2023-03-16 00:13:33,971{GMT}	INFO	[jepsen worker 0] jepsen.util: 5	:invoke	:read	nil
2023-03-16 00:13:33,981{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 5 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 3}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids [0 1 2 3 4], :in_reply_to 3, :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:34,127{GMT}	INFO	[jepsen worker 0] jepsen.util: 6	:invoke	:read	nil
2023-03-16 00:13:34,132{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 6 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids [0 1 2 3 4], :in_reply_to 1, :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:34,142{GMT}	INFO	[jepsen worker 0] jepsen.util: 7	:invoke	:broadcast	5
2023-03-16 00:13:34,143{GMT}	INFO	[jepsen worker 0] jepsen.util: 7	:ok	:broadcast	5
2023-03-16 00:13:34,236{GMT}	INFO	[jepsen worker 0] jepsen.util: 7	:invoke	:read	nil
2023-03-16 00:13:34,241{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 7 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 2}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids [0 1 2 3 4 5], :in_reply_to 2, :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:34,388{GMT}	INFO	[jepsen worker 0] jepsen.util: 8	:invoke	:broadcast	6
2023-03-16 00:13:34,390{GMT}	INFO	[jepsen worker 0] jepsen.util: 8	:ok	:broadcast	6
2023-03-16 00:13:34,447{GMT}	INFO	[jepsen worker 0] jepsen.util: 8	:invoke	:read	nil
2023-03-16 00:13:34,453{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 8 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 2}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids [0 1 2 3 4 5 6], :in_reply_to 2, :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:34,521{GMT}	INFO	[jepsen worker 0] jepsen.util: 9	:invoke	:broadcast	7
2023-03-16 00:13:34,522{GMT}	INFO	[jepsen worker 0] jepsen.util: 9	:ok	:broadcast	7
2023-03-16 00:13:34,547{GMT}	INFO	[jepsen worker 0] jepsen.util: 9	:invoke	:read	nil
2023-03-16 00:13:34,550{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 9 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 2}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids [0 1 2 3 4 5 6 7], :in_reply_to 2, :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:34,685{GMT}	INFO	[jepsen worker 0] jepsen.util: 10	:invoke	:broadcast	8
2023-03-16 00:13:34,686{GMT}	INFO	[jepsen worker 0] jepsen.util: 10	:ok	:broadcast	8
2023-03-16 00:13:34,807{GMT}	INFO	[jepsen worker 0] jepsen.util: 10	:invoke	:broadcast	9
2023-03-16 00:13:34,808{GMT}	INFO	[jepsen worker 0] jepsen.util: 10	:ok	:broadcast	9
2023-03-16 00:13:34,885{GMT}	INFO	[jepsen worker 0] jepsen.util: 10	:invoke	:broadcast	10
2023-03-16 00:13:34,886{GMT}	INFO	[jepsen worker 0] jepsen.util: 10	:ok	:broadcast	10
2023-03-16 00:13:34,989{GMT}	INFO	[jepsen worker 0] jepsen.util: 10	:invoke	:broadcast	11
2023-03-16 00:13:34,991{GMT}	INFO	[jepsen worker 0] jepsen.util: 10	:ok	:broadcast	11
2023-03-16 00:13:35,136{GMT}	INFO	[jepsen worker 0] jepsen.util: 10	:invoke	:read	nil
2023-03-16 00:13:35,147{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 10 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 5}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids [0 1 2 3 4 5 6 7 8 9 10 11], :in_reply_to 5, :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:35,264{GMT}	INFO	[jepsen worker 0] jepsen.util: 11	:invoke	:broadcast	12
2023-03-16 00:13:35,266{GMT}	INFO	[jepsen worker 0] jepsen.util: 11	:ok	:broadcast	12
2023-03-16 00:13:35,379{GMT}	INFO	[jepsen worker 0] jepsen.util: 11	:invoke	:broadcast	13
2023-03-16 00:13:35,380{GMT}	INFO	[jepsen worker 0] jepsen.util: 11	:ok	:broadcast	13
2023-03-16 00:13:35,522{GMT}	INFO	[jepsen worker 0] jepsen.util: 11	:invoke	:broadcast	14
2023-03-16 00:13:35,523{GMT}	INFO	[jepsen worker 0] jepsen.util: 11	:ok	:broadcast	14
2023-03-16 00:13:35,546{GMT}	INFO	[jepsen worker 0] jepsen.util: 11	:invoke	:broadcast	15
2023-03-16 00:13:35,547{GMT}	INFO	[jepsen worker 0] jepsen.util: 11	:ok	:broadcast	15
2023-03-16 00:13:35,681{GMT}	INFO	[jepsen worker 0] jepsen.util: 11	:invoke	:read	nil
2023-03-16 00:13:35,685{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 11 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 5}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids [0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15],
 :in_reply_to 5,
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:35,818{GMT}	INFO	[jepsen worker 0] jepsen.util: 12	:invoke	:broadcast	16
2023-03-16 00:13:35,822{GMT}	INFO	[jepsen worker 0] jepsen.util: 12	:ok	:broadcast	16
2023-03-16 00:13:35,901{GMT}	INFO	[jepsen worker 0] jepsen.util: 12	:invoke	:broadcast	17
2023-03-16 00:13:35,903{GMT}	INFO	[jepsen worker 0] jepsen.util: 12	:ok	:broadcast	17
2023-03-16 00:13:35,973{GMT}	INFO	[jepsen worker 0] jepsen.util: 12	:invoke	:broadcast	18
2023-03-16 00:13:35,974{GMT}	INFO	[jepsen worker 0] jepsen.util: 12	:ok	:broadcast	18
2023-03-16 00:13:36,139{GMT}	INFO	[jepsen worker 0] jepsen.util: 12	:invoke	:broadcast	19
2023-03-16 00:13:36,142{GMT}	INFO	[jepsen worker 0] jepsen.util: 12	:ok	:broadcast	19
2023-03-16 00:13:36,268{GMT}	INFO	[jepsen worker 0] jepsen.util: 12	:invoke	:read	nil
2023-03-16 00:13:36,279{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 12 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 5}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids [0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19],
 :in_reply_to 5,
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:36,401{GMT}	INFO	[jepsen worker 0] jepsen.util: 13	:invoke	:broadcast	20
2023-03-16 00:13:36,402{GMT}	INFO	[jepsen worker 0] jepsen.util: 13	:ok	:broadcast	20
2023-03-16 00:13:36,550{GMT}	INFO	[jepsen worker 0] jepsen.util: 13	:invoke	:read	nil
2023-03-16 00:13:36,562{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 13 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 2}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids [0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20],
 :in_reply_to 2,
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:36,627{GMT}	INFO	[jepsen worker 0] jepsen.util: 14	:invoke	:read	nil
2023-03-16 00:13:36,634{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 14 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids [0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20],
 :in_reply_to 1,
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:36,672{GMT}	INFO	[jepsen worker 0] jepsen.util: 15	:invoke	:broadcast	21
2023-03-16 00:13:36,674{GMT}	INFO	[jepsen worker 0] jepsen.util: 15	:ok	:broadcast	21
2023-03-16 00:13:36,709{GMT}	INFO	[jepsen worker 0] jepsen.util: 15	:invoke	:read	nil
2023-03-16 00:13:36,714{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 15 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 2}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids [0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21],
 :in_reply_to 2,
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:36,721{GMT}	INFO	[jepsen worker 0] jepsen.util: 16	:invoke	:read	nil
2023-03-16 00:13:36,725{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 16 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids [0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21],
 :in_reply_to 1,
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:36,849{GMT}	INFO	[jepsen worker 0] jepsen.util: 17	:invoke	:read	nil
2023-03-16 00:13:36,853{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 17 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids [0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21],
 :in_reply_to 1,
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:36,900{GMT}	INFO	[jepsen worker 0] jepsen.util: 18	:invoke	:read	nil
2023-03-16 00:13:36,905{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 18 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids [0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21],
 :in_reply_to 1,
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:36,991{GMT}	INFO	[jepsen worker 0] jepsen.util: 19	:invoke	:broadcast	22
2023-03-16 00:13:36,992{GMT}	INFO	[jepsen worker 0] jepsen.util: 19	:ok	:broadcast	22
2023-03-16 00:13:37,002{GMT}	INFO	[jepsen worker 0] jepsen.util: 19	:invoke	:read	nil
2023-03-16 00:13:37,007{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 19 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 2}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids [0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22],
 :in_reply_to 2,
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:37,125{GMT}	INFO	[jepsen worker 0] jepsen.util: 20	:invoke	:broadcast	23
2023-03-16 00:13:37,126{GMT}	INFO	[jepsen worker 0] jepsen.util: 20	:ok	:broadcast	23
2023-03-16 00:13:37,213{GMT}	INFO	[jepsen worker 0] jepsen.util: 20	:invoke	:read	nil
2023-03-16 00:13:37,220{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 20 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 2}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids [0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23],
 :in_reply_to 2,
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:37,417{GMT}	INFO	[jepsen worker 0] jepsen.util: 21	:invoke	:broadcast	24
2023-03-16 00:13:37,421{GMT}	INFO	[jepsen worker 0] jepsen.util: 21	:ok	:broadcast	24
2023-03-16 00:13:37,481{GMT}	INFO	[jepsen worker 0] jepsen.util: 21	:invoke	:read	nil
2023-03-16 00:13:37,493{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 21 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 2}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids
 [0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24],
 :in_reply_to 2,
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:37,657{GMT}	INFO	[jepsen worker 0] jepsen.util: 22	:invoke	:broadcast	25
2023-03-16 00:13:37,662{GMT}	INFO	[jepsen worker 0] jepsen.util: 22	:ok	:broadcast	25
2023-03-16 00:13:37,663{GMT}	INFO	[jepsen worker 0] jepsen.util: 22	:invoke	:broadcast	26
2023-03-16 00:13:37,664{GMT}	INFO	[jepsen worker 0] jepsen.util: 22	:ok	:broadcast	26
2023-03-16 00:13:37,865{GMT}	INFO	[jepsen worker 0] jepsen.util: 22	:invoke	:broadcast	27
2023-03-16 00:13:37,867{GMT}	INFO	[jepsen worker 0] jepsen.util: 22	:ok	:broadcast	27
2023-03-16 00:13:37,870{GMT}	INFO	[jepsen worker 0] jepsen.util: 22	:invoke	:broadcast	28
2023-03-16 00:13:37,870{GMT}	INFO	[jepsen worker 0] jepsen.util: 22	:ok	:broadcast	28
2023-03-16 00:13:37,870{GMT}	INFO	[jepsen worker 0] jepsen.util: 22	:invoke	:broadcast	29
2023-03-16 00:13:37,871{GMT}	INFO	[jepsen worker 0] jepsen.util: 22	:ok	:broadcast	29
2023-03-16 00:13:37,892{GMT}	INFO	[jepsen worker 0] jepsen.util: 22	:invoke	:read	nil
2023-03-16 00:13:37,899{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 22 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 6}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29],
 :in_reply_to 6,
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:37,932{GMT}	INFO	[jepsen worker 0] jepsen.util: 23	:invoke	:read	nil
2023-03-16 00:13:37,937{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 23 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29],
 :in_reply_to 1,
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:38,095{GMT}	INFO	[jepsen worker 0] jepsen.util: 24	:invoke	:read	nil
2023-03-16 00:13:38,104{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 24 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29],
 :in_reply_to 1,
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:38,237{GMT}	INFO	[jepsen worker 0] jepsen.util: 25	:invoke	:read	nil
2023-03-16 00:13:38,244{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 25 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29],
 :in_reply_to 1,
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:38,350{GMT}	INFO	[jepsen worker 0] jepsen.util: 26	:invoke	:read	nil
2023-03-16 00:13:38,355{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 26 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29],
 :in_reply_to 1,
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:38,440{GMT}	INFO	[jepsen worker 0] jepsen.util: 27	:invoke	:read	nil
2023-03-16 00:13:38,447{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 27 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29],
 :in_reply_to 1,
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:38,511{GMT}	INFO	[jepsen worker 0] jepsen.util: 28	:invoke	:broadcast	30
2023-03-16 00:13:38,512{GMT}	INFO	[jepsen worker 0] jepsen.util: 28	:ok	:broadcast	30
2023-03-16 00:13:38,645{GMT}	INFO	[jepsen worker 0] jepsen.util: 28	:invoke	:broadcast	31
2023-03-16 00:13:38,649{GMT}	INFO	[jepsen worker 0] jepsen.util: 28	:ok	:broadcast	31
2023-03-16 00:13:38,711{GMT}	INFO	[jepsen worker 0] jepsen.util: 28	:invoke	:read	nil
2023-03-16 00:13:38,722{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 28 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 3}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31],
 :in_reply_to 3,
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:38,908{GMT}	INFO	[jepsen worker 0] jepsen.util: 29	:invoke	:broadcast	32
2023-03-16 00:13:38,911{GMT}	INFO	[jepsen worker 0] jepsen.util: 29	:ok	:broadcast	32
2023-03-16 00:13:38,926{GMT}	INFO	[jepsen worker 0] jepsen.util: 29	:invoke	:read	nil
2023-03-16 00:13:38,933{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 29 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 2}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32],
 :in_reply_to 2,
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:39,104{GMT}	INFO	[jepsen worker 0] jepsen.util: 30	:invoke	:broadcast	33
2023-03-16 00:13:39,108{GMT}	INFO	[jepsen worker 0] jepsen.util: 30	:ok	:broadcast	33
2023-03-16 00:13:39,203{GMT}	INFO	[jepsen worker 0] jepsen.util: 30	:invoke	:broadcast	34
2023-03-16 00:13:39,207{GMT}	INFO	[jepsen worker 0] jepsen.util: 30	:ok	:broadcast	34
2023-03-16 00:13:39,289{GMT}	INFO	[jepsen worker 0] jepsen.util: 30	:invoke	:broadcast	35
2023-03-16 00:13:39,293{GMT}	INFO	[jepsen worker 0] jepsen.util: 30	:ok	:broadcast	35
2023-03-16 00:13:39,357{GMT}	INFO	[jepsen worker 0] jepsen.util: 30	:invoke	:read	nil
2023-03-16 00:13:39,368{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 30 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 4}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35],
 :in_reply_to 4,
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:39,369{GMT}	INFO	[jepsen worker 0] jepsen.util: 31	:invoke	:read	nil
2023-03-16 00:13:39,385{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 31 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35],
 :in_reply_to 1,
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:39,492{GMT}	INFO	[jepsen worker 0] jepsen.util: 32	:invoke	:broadcast	36
2023-03-16 00:13:39,494{GMT}	INFO	[jepsen worker 0] jepsen.util: 32	:ok	:broadcast	36
2023-03-16 00:13:39,651{GMT}	INFO	[jepsen worker 0] jepsen.util: 32	:invoke	:read	nil
2023-03-16 00:13:39,662{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 32 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 2}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36],
 :in_reply_to 2,
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:39,811{GMT}	INFO	[jepsen worker 0] jepsen.util: 33	:invoke	:read	nil
2023-03-16 00:13:39,823{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 33 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36],
 :in_reply_to 1,
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:39,824{GMT}	INFO	[jepsen worker 0] jepsen.util: 34	:invoke	:read	nil
2023-03-16 00:13:39,831{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 34 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36],
 :in_reply_to 1,
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:39,883{GMT}	INFO	[jepsen worker 0] jepsen.util: 35	:invoke	:read	nil
2023-03-16 00:13:39,889{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 35 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36],
 :in_reply_to 1,
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:40,037{GMT}	INFO	[jepsen worker 0] jepsen.util: 36	:invoke	:broadcast	37
2023-03-16 00:13:40,040{GMT}	INFO	[jepsen worker 0] jepsen.util: 36	:ok	:broadcast	37
2023-03-16 00:13:40,098{GMT}	INFO	[jepsen worker 0] jepsen.util: 36	:invoke	:broadcast	38
2023-03-16 00:13:40,101{GMT}	INFO	[jepsen worker 0] jepsen.util: 36	:ok	:broadcast	38
2023-03-16 00:13:40,112{GMT}	INFO	[jepsen worker 0] jepsen.util: 36	:invoke	:read	nil
2023-03-16 00:13:40,120{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 36 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 3}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38],
 :in_reply_to 3,
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:40,259{GMT}	INFO	[jepsen worker 0] jepsen.util: 37	:invoke	:read	nil
2023-03-16 00:13:40,274{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 37 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38],
 :in_reply_to 1,
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:40,275{GMT}	INFO	[jepsen worker 0] jepsen.util: 38	:invoke	:broadcast	39
2023-03-16 00:13:40,276{GMT}	INFO	[jepsen worker 0] jepsen.util: 38	:ok	:broadcast	39
2023-03-16 00:13:40,391{GMT}	INFO	[jepsen worker 0] jepsen.util: 38	:invoke	:read	nil
2023-03-16 00:13:40,395{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 38 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 2}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39],
 :in_reply_to 2,
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:40,462{GMT}	INFO	[jepsen worker 0] jepsen.util: 39	:invoke	:broadcast	40
2023-03-16 00:13:40,463{GMT}	INFO	[jepsen worker 0] jepsen.util: 39	:ok	:broadcast	40
2023-03-16 00:13:40,628{GMT}	INFO	[jepsen worker 0] jepsen.util: 39	:invoke	:broadcast	41
2023-03-16 00:13:40,631{GMT}	INFO	[jepsen worker 0] jepsen.util: 39	:ok	:broadcast	41
2023-03-16 00:13:40,671{GMT}	INFO	[jepsen worker 0] jepsen.util: 39	:invoke	:read	nil
2023-03-16 00:13:40,683{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 39 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 3}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41],
 :in_reply_to 3,
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:40,684{GMT}	INFO	[jepsen worker 0] jepsen.util: 40	:invoke	:broadcast	42
2023-03-16 00:13:40,686{GMT}	INFO	[jepsen worker 0] jepsen.util: 40	:ok	:broadcast	42
2023-03-16 00:13:40,879{GMT}	INFO	[jepsen worker 0] jepsen.util: 40	:invoke	:read	nil
2023-03-16 00:13:40,891{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 40 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 2}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42],
 :in_reply_to 2,
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:40,898{GMT}	INFO	[jepsen worker 0] jepsen.util: 41	:invoke	:broadcast	43
2023-03-16 00:13:40,899{GMT}	INFO	[jepsen worker 0] jepsen.util: 41	:ok	:broadcast	43
2023-03-16 00:13:41,038{GMT}	INFO	[jepsen worker 0] jepsen.util: 41	:invoke	:read	nil
2023-03-16 00:13:41,051{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 41 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 2}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43],
 :in_reply_to 2,
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:41,147{GMT}	INFO	[jepsen worker 0] jepsen.util: 42	:invoke	:read	nil
2023-03-16 00:13:41,151{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 42 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43],
 :in_reply_to 1,
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:41,298{GMT}	INFO	[jepsen worker 0] jepsen.util: 43	:invoke	:read	nil
2023-03-16 00:13:41,307{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 43 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43],
 :in_reply_to 1,
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:41,495{GMT}	INFO	[jepsen worker 0] jepsen.util: 44	:invoke	:broadcast	44
2023-03-16 00:13:41,499{GMT}	INFO	[jepsen worker 0] jepsen.util: 44	:ok	:broadcast	44
2023-03-16 00:13:41,674{GMT}	INFO	[jepsen worker 0] jepsen.util: 44	:invoke	:read	nil
2023-03-16 00:13:41,686{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 44 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 2}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44],
 :in_reply_to 2,
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:41,727{GMT}	INFO	[jepsen worker 0] jepsen.util: 45	:invoke	:broadcast	45
2023-03-16 00:13:41,729{GMT}	INFO	[jepsen worker 0] jepsen.util: 45	:ok	:broadcast	45
2023-03-16 00:13:41,854{GMT}	INFO	[jepsen worker 0] jepsen.util: 45	:invoke	:read	nil
2023-03-16 00:13:41,866{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 45 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 2}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45],
 :in_reply_to 2,
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:41,954{GMT}	INFO	[jepsen worker 0] jepsen.util: 46	:invoke	:broadcast	46
2023-03-16 00:13:41,955{GMT}	INFO	[jepsen worker 0] jepsen.util: 46	:ok	:broadcast	46
2023-03-16 00:13:41,984{GMT}	INFO	[jepsen worker 0] jepsen.util: 46	:invoke	:read	nil
2023-03-16 00:13:41,989{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 46 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 2}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46],
 :in_reply_to 2,
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:42,168{GMT}	INFO	[jepsen worker 0] jepsen.util: 47	:invoke	:broadcast	47
2023-03-16 00:13:42,172{GMT}	INFO	[jepsen worker 0] jepsen.util: 47	:ok	:broadcast	47
2023-03-16 00:13:42,289{GMT}	INFO	[jepsen worker 0] jepsen.util: 47	:invoke	:broadcast	48
2023-03-16 00:13:42,293{GMT}	INFO	[jepsen worker 0] jepsen.util: 47	:ok	:broadcast	48
2023-03-16 00:13:42,469{GMT}	INFO	[jepsen worker 0] jepsen.util: 47	:invoke	:read	nil
2023-03-16 00:13:42,480{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 47 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 3}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48],
 :in_reply_to 3,
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:42,669{GMT}	INFO	[jepsen worker 0] jepsen.util: 48	:invoke	:broadcast	49
2023-03-16 00:13:42,672{GMT}	INFO	[jepsen worker 0] jepsen.util: 48	:ok	:broadcast	49
2023-03-16 00:13:42,674{GMT}	INFO	[jepsen worker 0] jepsen.util: 48	:invoke	:read	nil
2023-03-16 00:13:42,684{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 48 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 2}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49],
 :in_reply_to 2,
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:42,768{GMT}	INFO	[jepsen worker 0] jepsen.util: 49	:invoke	:broadcast	50
2023-03-16 00:13:42,772{GMT}	INFO	[jepsen worker 0] jepsen.util: 49	:ok	:broadcast	50
2023-03-16 00:13:42,958{GMT}	INFO	[jepsen worker 0] jepsen.util: 49	:invoke	:read	nil
2023-03-16 00:13:42,968{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 49 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 2}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50],
 :in_reply_to 2,
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:43,030{GMT}	INFO	[jepsen worker 0] jepsen.util: 50	:invoke	:read	nil
2023-03-16 00:13:43,040{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 50 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50],
 :in_reply_to 1,
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:43,156{GMT}	INFO	[jepsen worker 0] jepsen.util: 51	:invoke	:broadcast	51
2023-03-16 00:13:43,158{GMT}	INFO	[jepsen worker 0] jepsen.util: 51	:ok	:broadcast	51
2023-03-16 00:13:43,320{GMT}	INFO	[jepsen worker 0] jepsen.util: 51	:invoke	:broadcast	52
2023-03-16 00:13:43,323{GMT}	INFO	[jepsen worker 0] jepsen.util: 51	:ok	:broadcast	52
2023-03-16 00:13:43,448{GMT}	INFO	[jepsen worker 0] jepsen.util: 51	:invoke	:read	nil
2023-03-16 00:13:43,462{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 51 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 3}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50
  51
  52],
 :in_reply_to 3,
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:43,496{GMT}	INFO	[jepsen worker 0] jepsen.util: 52	:invoke	:read	nil
2023-03-16 00:13:43,502{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 52 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50
  51
  52],
 :in_reply_to 1,
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:43,589{GMT}	INFO	[jepsen worker 0] jepsen.util: 53	:invoke	:broadcast	53
2023-03-16 00:13:43,590{GMT}	INFO	[jepsen worker 0] jepsen.util: 53	:ok	:broadcast	53
2023-03-16 00:13:43,743{GMT}	INFO	[jepsen worker 0] jepsen.util: 53	:invoke	:read	nil
2023-03-16 00:13:43,754{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 53 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 2}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50
  51
  52
  53],
 :in_reply_to 2,
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:43,826{GMT}	INFO	[jepsen worker 0] jepsen.util: 54	:invoke	:broadcast	54
2023-03-16 00:13:43,828{GMT}	INFO	[jepsen worker 0] jepsen.util: 54	:ok	:broadcast	54
2023-03-16 00:13:44,024{GMT}	INFO	[jepsen worker 0] jepsen.util: 54	:invoke	:broadcast	55
2023-03-16 00:13:44,028{GMT}	INFO	[jepsen worker 0] jepsen.util: 54	:ok	:broadcast	55
2023-03-16 00:13:44,124{GMT}	INFO	[jepsen worker 0] jepsen.util: 54	:invoke	:read	nil
2023-03-16 00:13:44,136{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 54 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 3}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50
  51
  52
  53
  54
  55],
 :in_reply_to 3,
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:44,275{GMT}	INFO	[jepsen worker 0] jepsen.util: 55	:invoke	:read	nil
2023-03-16 00:13:44,279{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 55 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50
  51
  52
  53
  54
  55],
 :in_reply_to 1,
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:44,359{GMT}	INFO	[jepsen worker 0] jepsen.util: 56	:invoke	:read	nil
2023-03-16 00:13:44,365{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 56 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50
  51
  52
  53
  54
  55],
 :in_reply_to 1,
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:44,528{GMT}	INFO	[jepsen worker 0] jepsen.util: 57	:invoke	:read	nil
2023-03-16 00:13:44,541{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 57 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50
  51
  52
  53
  54
  55],
 :in_reply_to 1,
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:44,595{GMT}	INFO	[jepsen worker 0] jepsen.util: 58	:invoke	:broadcast	56
2023-03-16 00:13:44,596{GMT}	INFO	[jepsen worker 0] jepsen.util: 58	:ok	:broadcast	56
2023-03-16 00:13:44,707{GMT}	INFO	[jepsen worker 0] jepsen.util: 58	:invoke	:read	nil
2023-03-16 00:13:44,720{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 58 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 2}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50
  51
  52
  53
  54
  55
  56],
 :in_reply_to 2,
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:44,881{GMT}	INFO	[jepsen worker 0] jepsen.util: 59	:invoke	:read	nil
2023-03-16 00:13:44,893{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 59 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50
  51
  52
  53
  54
  55
  56],
 :in_reply_to 1,
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:45,082{GMT}	INFO	[jepsen worker 0] jepsen.util: 60	:invoke	:broadcast	57
2023-03-16 00:13:45,086{GMT}	INFO	[jepsen worker 0] jepsen.util: 60	:ok	:broadcast	57
2023-03-16 00:13:45,185{GMT}	INFO	[jepsen worker 0] jepsen.util: 60	:invoke	:read	nil
2023-03-16 00:13:45,199{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 60 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 2}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50
  51
  52
  53
  54
  55
  56
  57],
 :in_reply_to 2,
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:45,361{GMT}	INFO	[jepsen worker 0] jepsen.util: 61	:invoke	:broadcast	58
2023-03-16 00:13:45,362{GMT}	INFO	[jepsen worker 0] jepsen.util: 61	:ok	:broadcast	58
2023-03-16 00:13:45,556{GMT}	INFO	[jepsen worker 0] jepsen.util: 61	:invoke	:broadcast	59
2023-03-16 00:13:45,562{GMT}	INFO	[jepsen worker 0] jepsen.util: 61	:ok	:broadcast	59
2023-03-16 00:13:45,568{GMT}	INFO	[jepsen worker 0] jepsen.util: 61	:invoke	:broadcast	60
2023-03-16 00:13:45,569{GMT}	INFO	[jepsen worker 0] jepsen.util: 61	:ok	:broadcast	60
2023-03-16 00:13:45,727{GMT}	INFO	[jepsen worker 0] jepsen.util: 61	:invoke	:broadcast	61
2023-03-16 00:13:45,731{GMT}	INFO	[jepsen worker 0] jepsen.util: 61	:ok	:broadcast	61
2023-03-16 00:13:45,842{GMT}	INFO	[jepsen worker 0] jepsen.util: 61	:invoke	:broadcast	62
2023-03-16 00:13:45,845{GMT}	INFO	[jepsen worker 0] jepsen.util: 61	:ok	:broadcast	62
2023-03-16 00:13:46,012{GMT}	INFO	[jepsen worker 0] jepsen.util: 61	:invoke	:broadcast	63
2023-03-16 00:13:46,016{GMT}	INFO	[jepsen worker 0] jepsen.util: 61	:ok	:broadcast	63
2023-03-16 00:13:46,211{GMT}	INFO	[jepsen worker 0] jepsen.util: 61	:invoke	:read	nil
2023-03-16 00:13:46,225{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 61 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 7}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50
  51
  52
  53
  54
  55
  56
  57
  58
  59
  60
  61
  62
  63],
 :in_reply_to 7,
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:46,410{GMT}	INFO	[jepsen worker 0] jepsen.util: 62	:invoke	:read	nil
2023-03-16 00:13:46,422{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 62 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50
  51
  52
  53
  54
  55
  56
  57
  58
  59
  60
  61
  62
  63],
 :in_reply_to 1,
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:46,559{GMT}	INFO	[jepsen worker 0] jepsen.util: 63	:invoke	:broadcast	64
2023-03-16 00:13:46,560{GMT}	INFO	[jepsen worker 0] jepsen.util: 63	:ok	:broadcast	64
2023-03-16 00:13:46,607{GMT}	INFO	[jepsen worker 0] jepsen.util: 63	:invoke	:broadcast	65
2023-03-16 00:13:46,608{GMT}	INFO	[jepsen worker 0] jepsen.util: 63	:ok	:broadcast	65
2023-03-16 00:13:46,753{GMT}	INFO	[jepsen worker 0] jepsen.util: 63	:invoke	:broadcast	66
2023-03-16 00:13:46,755{GMT}	INFO	[jepsen worker 0] jepsen.util: 63	:ok	:broadcast	66
2023-03-16 00:13:46,909{GMT}	INFO	[jepsen worker 0] jepsen.util: 63	:invoke	:broadcast	67
2023-03-16 00:13:46,912{GMT}	INFO	[jepsen worker 0] jepsen.util: 63	:ok	:broadcast	67
2023-03-16 00:13:46,947{GMT}	INFO	[jepsen worker 0] jepsen.util: 63	:invoke	:read	nil
2023-03-16 00:13:46,957{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 63 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 5}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50
  51
  52
  53
  54
  55
  56
  57
  58
  59
  60
  61
  62
  63
  64
  65
  66
  67],
 :in_reply_to 5,
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:47,035{GMT}	INFO	[jepsen worker 0] jepsen.util: 64	:invoke	:read	nil
2023-03-16 00:13:47,046{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 64 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50
  51
  52
  53
  54
  55
  56
  57
  58
  59
  60
  61
  62
  63
  64
  65
  66
  67],
 :in_reply_to 1,
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:47,138{GMT}	INFO	[jepsen worker 0] jepsen.util: 65	:invoke	:read	nil
2023-03-16 00:13:47,152{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 65 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50
  51
  52
  53
  54
  55
  56
  57
  58
  59
  60
  61
  62
  63
  64
  65
  66
  67],
 :in_reply_to 1,
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:47,327{GMT}	INFO	[jepsen worker 0] jepsen.util: 66	:invoke	:read	nil
2023-03-16 00:13:47,340{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 66 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50
  51
  52
  53
  54
  55
  56
  57
  58
  59
  60
  61
  62
  63
  64
  65
  66
  67],
 :in_reply_to 1,
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:47,409{GMT}	INFO	[jepsen worker 0] jepsen.util: 67	:invoke	:broadcast	68
2023-03-16 00:13:47,411{GMT}	INFO	[jepsen worker 0] jepsen.util: 67	:ok	:broadcast	68
2023-03-16 00:13:47,480{GMT}	INFO	[jepsen worker 0] jepsen.util: 67	:invoke	:broadcast	69
2023-03-16 00:13:47,482{GMT}	INFO	[jepsen worker 0] jepsen.util: 67	:ok	:broadcast	69
2023-03-16 00:13:47,607{GMT}	INFO	[jepsen worker 0] jepsen.util: 67	:invoke	:broadcast	70
2023-03-16 00:13:47,610{GMT}	INFO	[jepsen worker 0] jepsen.util: 67	:ok	:broadcast	70
2023-03-16 00:13:47,621{GMT}	INFO	[jepsen worker 0] jepsen.util: 67	:invoke	:read	nil
2023-03-16 00:13:47,630{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 67 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 4}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50
  51
  52
  53
  54
  55
  56
  57
  58
  59
  60
  61
  62
  63
  64
  65
  66
  67
  68
  69
  70],
 :in_reply_to 4,
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:47,697{GMT}	INFO	[jepsen worker 0] jepsen.util: 68	:invoke	:broadcast	71
2023-03-16 00:13:47,698{GMT}	INFO	[jepsen worker 0] jepsen.util: 68	:ok	:broadcast	71
2023-03-16 00:13:47,769{GMT}	INFO	[jepsen worker 0] jepsen.util: 68	:invoke	:read	nil
2023-03-16 00:13:47,780{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 68 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 2}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50
  51
  52
  53
  54
  55
  56
  57
  58
  59
  60
  61
  62
  63
  64
  65
  66
  67
  68
  69
  70
  71],
 :in_reply_to 2,
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-03-16 00:13:47,943{GMT}	INFO	[jepsen worker 0] jepsen.util: 69	:invoke	:broadcast	72
2023-03-16 00:13:47,947{GMT}	INFO	[jepsen worker 0] jepsen.util: 69	:ok	:broadcast	72
2023-03-16 00:13:47,959{GMT}	INFO	[jepsen worker 0] jepsen.util: 69	:invoke	:broadcast	73
2023-03-16 00:13:47,961{GMT}	INFO	[jepsen worker 0] jepsen.util: 69	:ok	:broadcast	73
2023-03-16 00:13:47,983{GMT}	INFO	[jepsen worker 0] jepsen.util: 69	:invoke	:broadcast	74
2023-03-16 00:13:47,984{GMT}	INFO	[jepsen worker 0] jepsen.util: 69	:ok	:broadcast	74
2023-03-16 00:13:48,175{GMT}	INFO	[jepsen worker 0] jepsen.util: 69	:invoke	:broadcast	75
2023-03-16 00:13:48,179{GMT}	INFO	[jepsen worker 0] jepsen.util: 69	:ok	:broadcast	75
2023-03-16 00:13:48,340{GMT}	INFO	[Jepsen shutdown hook] jepsen.core: Downloading DB logs before JVM shutdown...
